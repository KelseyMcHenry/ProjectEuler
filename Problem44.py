"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""

from math import sqrt
from itertools import product


def is_pentagonal(number):
    return ((1 + sqrt(1 + (4 * 3 * 2 * number))) / 6) % 1 == 0


pentagonal_numbers = [i for i in range(1, 10000000) if is_pentagonal(i)]
pentagonal_number_pairs = product(pentagonal_numbers, pentagonal_numbers)


minimum_difference = 10000000
solution = 0
for j, k in pentagonal_number_pairs:
    if is_pentagonal(j + k) and is_pentagonal(abs(j - k)):
        if abs(j - k) < minimum_difference:
            minimum_difference = abs(j - k)
            solution = abs(j - k)

print(solution)